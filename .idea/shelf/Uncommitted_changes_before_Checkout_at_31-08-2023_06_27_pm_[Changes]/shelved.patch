Index: vaistra-blog-app/src/main/java/com/vaistra/controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.vaistra.controller;\r\n\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.vaistra.dto.UserDTO;\r\nimport com.vaistra.entities.User;\r\nimport com.vaistra.services.UserService;\r\nimport jakarta.validation.Valid;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.MediaType;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.security.core.parameters.P;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport org.springframework.web.multipart.MultipartFile;\r\n\r\nimport java.io.IOException;\r\nimport java.util.List;\r\n\r\n@RestController\r\n@RequestMapping(\"user\")\r\npublic class UserController {\r\n\r\n    private final UserService userService;\r\n\r\n    @Autowired\r\n    public UserController(UserService userService) {\r\n        this.userService = userService;\r\n    }\r\n\r\n    @GetMapping(\"show\")\r\n    public ResponseEntity<List<UserDTO>> allUser(@RequestParam(value = \"pageNumber\",defaultValue = \"0\",required = false) Integer pageNumber,\r\n                                                 @RequestParam(value = \"pageSize\", defaultValue = \"5\", required = false) Integer pageSize,\r\n                                                 @RequestParam(value = \"sortBy\", defaultValue = \"userId\", required = false) String sortBy,\r\n                                                 @RequestParam(value = \"sortDirection\", defaultValue = \"asc\", required = false) String sortDirection)   {\r\n        return new ResponseEntity<>(userService.getAllUsers(pageNumber,pageSize,sortBy,sortDirection), HttpStatus.OK);\r\n    }\r\n\r\n    @PostMapping(\"add\")\r\n    public ResponseEntity<UserDTO> add(\r\n            @RequestParam(\"image\") MultipartFile file,\r\n            @RequestParam(\"userData\") @Valid String userDtoStr\r\n    ) throws IOException {\r\n        return new ResponseEntity<>(userService.addUser(userDtoStr,file),HttpStatus.CREATED);\r\n    }\r\n\r\n    @PostMapping(\"forgetpwd/{id}\")\r\n    private ResponseEntity<String> forget(@PathVariable int id){\r\n        return new ResponseEntity<>(userService.eml(id),HttpStatus.OK);\r\n    }\r\n\r\n    @PostMapping(\"verify/{token}/{id}\")\r\n    public ResponseEntity<UserDTO> verify(@RequestBody String newpwd,@PathVariable long token,@PathVariable int id){\r\n        return new ResponseEntity<>(userService.verification(newpwd,token,id),HttpStatus.OK);\r\n    }\r\n\r\n    @GetMapping(\"test\")\r\n    public String check(){\r\n        return \"Secured API\";\r\n    }\r\n\r\n    @GetMapping(\"get/{id}\")\r\n    public ResponseEntity<UserDTO> byId(@PathVariable int id){\r\n        return new ResponseEntity<>(userService.getById(id),HttpStatus.OK);\r\n    }\r\n\r\n    @GetMapping(\"showimg/{id}\")\r\n    public ResponseEntity<?> showimg(@PathVariable Integer id) throws IOException {\r\n        byte[] b = userService.img(id);\r\n        return ResponseEntity.status(HttpStatus.OK)\r\n                .contentType(MediaType.IMAGE_JPEG)\r\n                .body(b);\r\n    }\r\n\r\n    @GetMapping(\"inactive/{id}\")\r\n    public ResponseEntity<UserDTO> inActiveUser(@PathVariable int id){\r\n        return new ResponseEntity<>(userService.inAct(id),HttpStatus.ACCEPTED);\r\n    }\r\n\r\n    @PutMapping(\"update/{id}\")\r\n    public ResponseEntity<UserDTO> update(\r\n            @RequestParam(\"image\") MultipartFile file,\r\n            @RequestParam(\"userData\") @Valid String userDtoStr,\r\n            @PathVariable int id\r\n    ) throws IOException {\r\n        return new ResponseEntity<>(userService.updt(file,userDtoStr,id),HttpStatus.OK);\r\n    }\r\n\r\n    @DeleteMapping(\"delete/{id}\")\r\n    public ResponseEntity<String> remove(@PathVariable int id){\r\n        return new ResponseEntity<>(userService.delete(id),HttpStatus.OK);\r\n    }\r\n\r\n    @GetMapping(\"restore/{id}\")\r\n    public ResponseEntity<UserDTO> restore(@PathVariable int id){\r\n        return new ResponseEntity<>(userService.restore(id),HttpStatus.OK);\r\n    }\r\n\r\n    @DeleteMapping(\"forceDelete/{id}\")\r\n    public ResponseEntity<String> forceDelete(@PathVariable int id){\r\n        return new ResponseEntity<>(userService.forceDelete(id),HttpStatus.OK);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vaistra-blog-app/src/main/java/com/vaistra/controller/UserController.java b/vaistra-blog-app/src/main/java/com/vaistra/controller/UserController.java
--- a/vaistra-blog-app/src/main/java/com/vaistra/controller/UserController.java	(revision 22d246876c80d6b40d1664bb39adba08af5ac509)
+++ b/vaistra-blog-app/src/main/java/com/vaistra/controller/UserController.java	(date 1693478249803)
@@ -95,7 +95,10 @@
         return new ResponseEntity<>(userService.restore(id),HttpStatus.OK);
     }
 
-    @DeleteMapping("forceDelete/{id}")
+    @DeleteMapping("" +
+            "" +
+            "" +
+            "/{id}")
     public ResponseEntity<String> forceDelete(@PathVariable int id){
         return new ResponseEntity<>(userService.forceDelete(id),HttpStatus.OK);
     }
